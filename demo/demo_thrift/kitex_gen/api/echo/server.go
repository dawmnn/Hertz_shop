// Code generated by Kitex v0.9.1. DO NOT EDIT.
package echo

import (
	api "github.com/cloudwego/biz-demo/gomall/demo/demo_thrift/kitex_gen/api"
	server "github.com/cloudwego/kitex/server"
)

// NewServer creates a server.Server with the given handler and options.
func NewServer(handler api.Echo, opts ...server.Option) server.Server {
	var options []server.Option

	options = append(options, opts...)
	options = append(options, server.WithCompatibleMiddlewareForUnary())
//这一行向 options 切片中添加了一个默认的选项 server.WithCompatibleMiddlewareForUnary()。
//这个选项是 Kitex 框架中的一个中间件选项，
//通常用于支持兼容的单向 RPC 请求处理，可能与旧版本的兼容性有关。
	svr := server.NewServer(options...)
	if err := svr.RegisterService(serviceInfo(), handler); err != nil {
		panic(err)
	}
	//用于注册服务：
	//svr.RegisterService：在创建的服务器 svr 中注册一个服务。
	//serviceInfo()：这个函数应该返回服务的基本信息（比如服务名称、服务描述等），它会用于注册服务。
	//handler：传入的业务逻辑处理器，即实现了 api.Echo 接口的对象。
	return svr
}

func RegisterService(svr server.Server, handler api.Echo, opts ...server.RegisterOption) error {
	//这个是定义了第二个函数 RegisterService，它用于在给定的服务器 svr 上注册一个服务。
	//与 NewServer 不同的是，这个函数不创建新的服务器，只是将服务注册到已有的服务器上。
	//它接收的参数有：
	//svr：服务器实例。
	//handler：实现了 api.Echo 接口的服务处理器。
	//opts ...server.RegisterOption：可变参数，用于传入服务注册时的额外配置选项。
	//返回值是一个 error，如果注册服务时出错，它会返回错误信息。
	return svr.RegisterService(serviceInfo(), handler, opts...)
}
